---
import { getCollection } from 'astro:content';
import ArticleLayout from '../../layouts/ArticleLayout.astro';

const allLessons = await getCollection('lessons');
const tags = [...new Set(allLessons.map(post => post.data.tags).flat())];
const tagCounts: Record<string, number>= {};

// Count posts per tag
allLessons.forEach(post => {
  post.data.tags?.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// Sort tags alphabetically
const sortedTags = tags.sort((a, b) => a.localeCompare(b));
const base = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/';
---

<ArticleLayout title="Tags" description="All tags used in lessons">
  <div class="page">
    <h1 class="posts-title">Tags</h1>
 
    <div class="tags-list">
      {sortedTags.map(tag => (
        <a href={`${base}tags/${tag}/`} class="tag-item">
          <span class="tag-name">#{tag}</span>
          <span class="tag-count">({tagCounts[tag]})</span>
        </a>
      ))}
    </div>
  </div>
</ArticleLayout>

<style>
  .page {
    margin: 0 !important;
  }
  .tags-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-top: 40px;
  }
 
  .tag-item {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border: 2px solid var(--accent);
    text-decoration: none;
    transition: all 0.15s linear;
  }
  
  .tag-item:hover {
    background: color-mix(in srgb, var(--accent) 15%, transparent);
  }
  
  .tag-name {
    color: var(--accent);
    font-weight: 600;
  }
  
  .tag-count {
    color: color-mix(in srgb, var(--foreground) 65%, transparent);
    font-size: calc(var(--font-size) * 0.9);
  }
</style>
