---
import BaseLayout from "./BaseLayout.astro";
import "reveal.js/dist/reveal.css";
import "reveal.js/dist/theme/black.css"
import "reveal.js/plugin/highlight/monokai.css";

export interface Props {
  altViewUrl?: string;
  altViewType?: string;
  title: string;
  description?: string;
}

const { title, description, altViewUrl, altViewType = "full lesson"} = Astro.props;
---

<BaseLayout title={title} altViewUrl={altViewUrl} altViewType={altViewType}>
  <Fragment slot="head">
    {description && <meta name="description" content={description} />}
  </Fragment>
  <div class="reveal">
    <div class="slides">
      <slot />
    </div>
  </div>

  <slot name="bottom-nav" />
</BaseLayout>

<script>
  import Reveal from "reveal.js";
  import Highlight from "reveal.js/plugin/highlight/highlight.esm.js";
  import Markdown from "reveal.js/plugin/markdown/markdown.esm.js";

  let deck = new Reveal({ plugins: [Highlight, Markdown] });
  deck.initialize({
    hash: true,
    embedded: true,
  }).then(() => {
    const highlight = deck.getPlugin('highlight');
    highlight.hljs.highlightAll();
 
    // HACK: Apply styles after initialization
    const style = document.createElement('style');
    style.textContent = `
      strong {
        color: var(--accent) !important;
      }

      class-work {
        font-size: 1.75rem;
        margin-top: 10px;
        display: inline-block;
        text-align: left;
        padding-left: 5rem;
        border-left: 5px solid #b55151;
      }

      class-work>h3 {
        text-transform: none !important;
        font-size: 2rem !important;
      }

      class-note {
        display: inline-block;
        font-size: 1.5rem;
        border-top: 1px solid #b55151;
        border-bottom: 1px solid #b55151; 
      }

      class-note>p:before {
        content: 'NOTE: ';
        font-weight: bold;
        font-style: italic;
      }

      class-work>h3:before {
        content: 'Exercise: ';
        color: var(--secondary);
      }

      .reveal blockquote {
        text-align: left;
        width: 90%;
        font-size: 1.5rem !important;
        background-color: inherit !important;
        padding: 10px;
      }

      .reveal blockquote:before {
        content: none !important;
      }

      .reveal img {
        border: none !important;
      }

      .reveal .slide-background {
        background-color: var(--background);
      }

      .reveal ul {
        list-style: square !important;
      }

      .reveal ul li::before {
        content: "" !important;
      }
 
      .reveal .controls {
        font-size: 8px;
      }

      .reveal pre {
        display: inline-block;
        width: auto;
        min-width: 100%;
        font-size: 1.65rem !important;
      }

      .hljs-comment, .hljs-quote, .hljs-deletion, .hljs-meta {
        color: #F6E7B2 !important;
      }

      .hljs-built_in {
        color: #98b735 !important; 
      }

      .hljs-string {
        color: #af719b !important; 
      }

      .reveal .article-only {
        display: none !important;
      }
    `;
    document.head.appendChild(style);
  });
</script>

<style>
  :root {
    --r-heading-font: "IBM Plex Mono", monospace;
    --r-main-font: "IBM Plex Mono", sans-serif;
    --r-code-font: "IBM Plex Mono", monospace;
    --r-heading2-size: 1.5em;
    --r-heading-letter-spacing: -1px;
    --r-heading-color: var(--accent);
    --r-link-color: var(--secondary);
    --r-background-color: inherit;
    --r-main-font-size: 2rem;
  }

  body {
    overflow-Y: hidden;
  }
 
  .reveal {
    height: 32vh;
  }

  .container {
    border-right: none !important;
  }
</style>
